# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Auth {
  """JWT access token"""
  accessToken: String!

  """JWT refresh token"""
  refreshToken: String!
  user: User!
}

input ClientServiceInputs {
  application: String!
  client_service_manager: String!
  clientid: String!
  clientname: String!
  contacts: String!
  csm_contacts: String!
  environment: String!
  last_updated: String!
  open_issues_id: String!
  rag: String!
  rag_trend: String!
  timeandmaterialgoalsid: String!
}

type ClientServiceModel {
  application: String!
  client_service_manager: String!
  clientid: String!
  clientname: String!
  contacts: String!
  csm_contacts: String!
  environment: String!
  last_updated: String!
  open_issues_id: String!
  rag: String!
  rag_trend: String!
  timeandmaterialgoalsid: String!
}

input DashboardInputs {
  clientid: Int!
  dashboardtype: String!
  maintitle: String
  maintitlecount: String
  maintitlecountthreedays: String
  maintitlecounttwodays: String
  maintitlecountyesterday: String
  subtitle: String
}

type DashboardModel {
  clientid: Int!
  dashboardtype: String!
  maintitle: String
  maintitlecount: String
  maintitlecountthreedays: String
  maintitlecounttwodays: String
  maintitlecountyesterday: String
  subtitle: String
}

"""Date custom scalar type"""
scalar Date

input KanbanInputs {
  assignee: String
  classname: String
  color: String
  dependencies: String
  description: String
  due_date: Date
  estimate: Int
  Id: Int
  parentId: Int
  party_ref: String
  priority: String
  rankid: Int
  start_date: Date
  status: String
  summary: String
  tags: String
  task_id: String!
  title: String
  type: String
}

type kb_priority {
  description: String!
  priority: String!
  updatedte: Date!
  updateusr: String!
}

type kb_status {
  description: String!
  status: String!
  updatedte: Date!
  updateusr: String!
}

type kb_task {
  assignee: String
  classname: String
  color: String
  dependencies: String
  description: String
  due_date: Date
  estimate: Int
  Id: Int
  parentId: Int
  party_ref: String
  priority: String
  Priority: [kb_priority!]!
  rankid: Int
  start_date: Date
  status: String
  Status: [kb_status!]!
  subtasks: [SubTasks!]!
  summary: String
  tags: String
  task_id: String!
  title: String
  type: String
  Type: [kb_type!]!
}

type kb_type {
  description: String!
  type: String!
  updatedte: Date!
  updateusr: String!
}

input LoginInput {
  password: String!
  userid: String!
}

type Mutation {
  createClientServices(data: ClientServiceInputs!): ClientServiceModel!
  createDashboards(data: DashboardInputs!): DashboardModel!
  createKanbanPriority(kanbanData: TaskPriorityInputs!): kb_priority!
  createKanbanStatus(data: TaskStatusInputs!): kb_status!
  createKanbanType(data: TaskStatusInputs!): kb_type!
  createSubTask(data: SubTaskInputs!): SubTasks!
  createTask(data: KanbanInputs!): kb_task!
  deleteClientServices(clientid: Int!): ClientServiceModel!
  deleteDashboards(clientid: Int!, dashboardtype: String!): DashboardModel!
  deleteKanbanPriority(priority: String!): kb_priority!
  deleteKanbanStatus(status: String!): kb_status!
  deleteKanbanSubTask(subid: String!, task_id: String!): SubTasks!
  deleteKanbanType(type: String!): kb_type!
  deleteTask(task_id: String!): kb_task!
  login(data: LoginInput!): Auth!
  refreshToken(refreshtoken: String!): Token!
  resetPassword(data: LoginInput!): User!
  signup(data: SignupInput!): User!
  updateClientServices(clientid: Int!, newData: ClientServiceInputs!): ClientServiceModel!
  updateDashboards(clientid: Int!, dashboard: DashboardInputs!, dashboardtype: String!): DashboardModel!
  updateKanbanPriority(kanbanData: TaskPriorityInputs!, priority: String!): kb_priority!
  updateKanbanStatus(id: String!, newData: TaskStatusInputs!): kb_status!
  updateKanbanType(newData: TaskStatusInputs!, type: String!): kb_type!
  updateTask(newData: KanbanInputs!, task_id: String!): kb_task!
  updateTaskDependency(dependency: String!, task_id: String!): kb_task!
  updateTaskParentId(parentId: Int!, task_id: String!): kb_task!
}

type PartyAddress {
  addr_line1: String!
  addr_line2: String!
  addr_line3: String!
  addr_line4: String!
  addr_line5: String!
  addr_line6: String!
  addr_type: String!
  contact_name: String!
  contact_title: String!
  email: String!
  fax_no: String!
  int_dial_code: String!
  party_ref: String!
  phone_no: String!
  post_code: String!
  version_date: Date!
  version_no: Int!
  version_user: String!
}

type PartyAssoc {
  assoc_party_ref: String!
  assoc_type: String!
  description: String!
  party_ref: String!
  user_def: String!
  version_date: Date!
  version_no: Int!
  version_user: String!
}

type PartyClassification {
  class_code: String!
  class_type: String!
  description: String!
  party_ref: String!
  user_def: String!
  version_date: Date!
  version_no: Int!
  version_user: String!
}

type PartyDate {
  date: String!
  date_type: String!
  party_ref: String!
  time: String!
  version_date: Date!
  version_no: Int!
  version_user: String!
}

type PartyExtRef {
  description: String!
  party_ext_ref: String!
  party_ext_ref_type: String!
  party_ref: String!
  user_def: String!
  version_date: Date!
  version_no: Int!
  version_user: String!
}

type PartyFlag {
  description: String!
  flag_code: String!
  flag_type: Int!
  party_ref: String!
  user_def: String!
  version_date: Date!
  version_no: Int!
  version_user: String!
}

type PartyInstr {
  description: String!
  instr_ref: String!
  instr_ref_type: String!
  instr_type: String!
  party_ref: String!
  user_def: String!
  version_date: Date!
  version_no: Int!
  version_user: String!
}

type PartyNarrative {
  description: String!
  narr_type: String!
  narrative: String!
  party_ref: String!
  user_def: String!
  version_date: Date!
  version_no: Int!
  version_user: String!
}

type PartySSI {
  account_name: String!
  account_no: String!
  active_ind: String!
  ccy: String!
  comms_service: String!
  dacc_ref: String!
  depo_ref: String!
  depot_alias: String!
  depot_descr: String!
  depot_type: String!
  description: String!
  party_ref: String!
  user_def: String!
  version_date: Date!
  version_no: Int!
  version_user: String!
}

type PartySwift {
  branch_code: String!
  channel: String!
  company_name: String!
  host: String!
  incoming_queue: String!
  logical_term_id: [String!]!
  outgoing_queue: String!
  party_ref: String!
  port_number: Int!
  queue_mgr: String!
  version_date: Date!
  version_no: Int!
  version_user: String!
}

type Query {
  ClientService: [ClientServiceModel!]!
  ClientServicesById(clientid: Int!): [ClientServiceModel!]!
  Dashboards: [DashboardModel!]!
  DashboardsById(clientid: Int!, dashboardtype: String!): DashboardModel!
  GIB: String!
  KanbanByTaskId(task_id: String!): [kb_task!]!
  KanbanFirstTask(party_ref: String!): kb_task!
  KanbanPriority: [kb_priority!]!
  KanbanPriorityById(priority: String!): [kb_priority!]!
  KanbanStatus: [kb_status!]!
  KanbanStatusById(status: String!): [kb_status!]!
  KanbanTask: [kb_task!]!
  KanbanTaskByRef(partyRef: String!): [kb_task!]!
  KanbanTaskByRefAndStatus(partyRef: String!, status: String!): [kb_task!]!
  KanbanTaskByStatus(status: String!): [kb_task!]!
  KanbanTaskByTaskId(task_id: String!): kb_task!
  KanbanType: [kb_type!]!
  KanbanTypeById(type: String!): [kb_type!]!
  KanbanUniqueByTaskId(task_id: String!): kb_task!
  me: User!
  SubTaskById(subid: String!, task_id: String!): [SubTasks!]!
  SubTasks: [SubTasks!]!
  SubTasksByTaskId(task_id: String!): [SubTasks!]!
  users: [User!]!
}

input SignupInput {
  client_ref: String
  createdAt: String!
  email: String!
  firstname: String
  lastname: String
  password: String!
  role: String!
  updatedAt: String!
  userid: String!
}

input SubTaskInputs {
  desc: String
  estimate: Int
  status: String
  subid: String!
  summary: String
  task_id: String!
  type: String
}

type SubTasks {
  desc: String
  estimate: Int!
  status: String
  subid: String!
  summary: String
  task_id: String!
  type: String
}

input TaskPriorityInputs {
  description: String!
  priority: String!
  updatedte: Date!
  updateusr: String!
}

input TaskStatusInputs {
  description: String!
  status: String!
  updatedte: Date!
  updateusr: String!
}

type Token {
  """JWT access token"""
  accessToken: String!

  """JWT refresh token"""
  refreshToken: String!
}

type User {
  createdAt: Date!
  email: String!
  firstname: String
  lastname: String
  role: String!
  updatedAt: Date!
  userid: ID!
}
