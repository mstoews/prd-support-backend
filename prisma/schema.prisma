generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRESQL_URL")
}

model User {
  id        String   @id
  createdAt DateTime @default(now())
  updatedAt DateTime
  email     String
  password  String
  firstname String
  lastname  String
}

model party {
  party_ref             String                 @id
  party_type            String                 @unique
  party_short_name      String?
  party_long_name       String?
  party_extra_long_name String?
  active_ind            String?
  version_date          DateTime?              @default(now())
  version_no            Int?
  version_user          String?
  party_assoc           party_assoc[]
  party_classification  party_classification[]
  party_ext_ref         party_ext_ref[]
  party_flag            party_flag[]
  party_instr           party_instr[]
  party_narrative       party_narrative[]
}

model party_assoc {
  party_ref       String
  assoc_type      String
  assoc_party_ref String?
  user_def        String?
  description     String?
  version_date    DateTime?
  version_no      Int?
  version_user    String?
  party           party     @relation(fields: [party_ref], references: [party_ref])

  @@id([party_ref, assoc_type])
}

model party_classification {
  party_ref    String
  class_type   String
  class_code   String?
  user_def     String?
  description  String?
  version_date DateTime?
  version_no   Int?
  version_user String?
  party        party     @relation(fields: [party_ref], references: [party_ref])

  @@id([party_ref, class_type])
}

model party_ext_ref {
  party_ref          String
  party_ext_ref_type String
  party_ext_ref      String?
  user_def           String?
  description        String?
  version_date       DateTime?
  version_no         Int?
  version_user       String?
  party              party     @relation(fields: [party_ref], references: [party_ref])

  @@id([party_ref, party_ext_ref_type])
}

model party_flag {
  party_ref    String
  flag_type    Int
  flag_code    String
  user_def     String?
  description  String?
  version_date DateTime? @default(now())
  version_no   Int?
  version_user String?
  party        party     @relation(fields: [party_ref], references: [party_ref])

  @@id([party_ref, flag_code])
}

model party_instr {
  party_ref      String
  instr_type     String
  instr_ref_type String?
  instr_ref      String
  user_def       String?
  description    String?
  version_date   DateTime?
  version_no     Int?
  version_user   String?
  party          party     @relation(fields: [party_ref], references: [party_ref])

  @@id([party_ref, instr_ref])
}

model party_narrative {
  party_ref    String
  narr_type    String
  narrative    String?
  user_def     String?
  description  String?
  version_date DateTime?
  version_no   Int?
  version_user String?
  party        party     @relation(fields: [party_ref], references: [party_ref])

  @@id([party_ref, narr_type])
}

model party_ssi {
  party_ref     String
  depot_alias   String
  depot_descr   String?
  depot_type    String?
  comms_service String?
  dacc_ref      String?
  account_no    String?
  account_name  String?
  depo_ref      String?
  active_ind    String?
  user_def      String?
  description   String?
  version_date  DateTime?
  version_no    Int?
  version_user  String?

  @@id([party_ref, depot_alias])
}
